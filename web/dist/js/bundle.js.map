{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/bundle.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\nlet server = ''\nlet data: any = undefined\n\nlet ipNameMap: any = {\n  '192.168.31.218': '小米笔记本',\n  '192.168.31.251': '公司MBP',\n  '192.168.31.162': '小米手机',\n  '\t192.168.31.241': 'ipad2018',\n  '192.168.31.254': '华为P30'\n}\n\nfunction parseQuery(queryString: string) {\n  var query: any = {}\n  var pairs = (queryString[0] === '?' ? queryString.substring(1) : queryString).split('&')\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split('=')\n    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n  }\n  return query\n}\n\nfunction fetchGet(path: string, cache: RequestCache, callback: (data: any) => void) {\n  fetch(`${server}${path}`, { cache: cache })\n    .then(response => response.json())\n    .then(function (resp) {\n      if (resp.code != 200) {\n        console.log('fetchGet,not 200', resp)\n        return\n      }\n\n      callback(resp.data)\n    })\n    .catch(function (error) {\n      console.log('fetchGet Failed', error)\n    })\n}\n\n\nfunction fetchPost(path: string, body: any, cache: RequestCache, callback: (data: any)=>void) {\n  fetch(`${server}${path}`, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: cache, // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(body) // body data type must match \"Content-Type\" header\n  })\n    .then(response => response.json())\n    .then(function (resp) {\n      if (resp.code != 200) {\n        console.log('transWords fetch,not 200', resp)\n        return\n      }\n\n      callback(resp.data)\n    })\n    .catch(function (error) {\n      console.log('fetchPost Failed', error)\n    })\n}\n\n\nfunction renderFilterIpSelect(ips: string[]) {\n  let html = '<option value=\"\">all</option>'\n  for (let ip of ips) {\n    let name = ip\n    if (ipNameMap[ip]) {\n      name = ipNameMap[ip]\n    }\n    html += `<option value=\"${ip}\">${name}</option>`\n  }\n\n  //@ts-ignore\n  document.getElementById('filterIp').innerHTML = html\n}\n\nfunction renderQuerylogTable(data: any, unique: boolean, freshIp: boolean) {\n  let ipMap: any = {}\n  let html = ''\n  let domainMap: any = {}\n  for (let item of data) {\n    if (unique && domainMap[item[3]]) {\n      continue\n    }\n    domainMap[item[3]] = 1\n    ipMap[item[2]] = 1\n    let date = new Date(parseInt(item[0])*1000)\n    let at = item[1]\n    switch (at) {\n      case '0':\n        at = '忽略'\n        break\n      case '1':\n        at = '正常'\n        break\n      case '2':\n        at = '拦截'\n        break\n      default:\n        break\n    }\n    let ip = item[2]\n    if (ipNameMap[ip]) {\n      ip += `(${ipNameMap[ip]})`\n    }\n    html += `<tr>\n    <td>${date.toLocaleString()}</td>\n    <td>${at}</td>\n    <td>${ip}</td>\n    <td>${item[3]}</td>\n    <td>${item[4]?item[4]:''}</td>\n    <td>\n      <select name=\"opt\" class=\"form-select\" domain=\"${item[3]}\">\n        <option value=\"\">不动</option>\n        <option value=\"0\">忽略</option>\n        <option value=\"1\">正常</option>\n        <option value=\"2\">拦截</option>\n      </select>\n    </td>\n    </tr>`\n  }\n\n  //@ts-ignore\n  document.getElementById('querylog').innerHTML = html\n  document.querySelectorAll(\"select[name='opt']\").forEach((select) => {\n    console.log('select', select)\n    select.addEventListener('change', optChange)\n  })\n  if (freshIp) {\n    renderFilterIpSelect(Object.keys(ipMap))\n  }\n}\n\nfunction filterIpChange() {\n  //@ts-ignore\n  let ip = document.getElementById('filterIp').value\n  if (ip == \"\") {\n    renderQuerylogTable(data, true, false)\n    return\n  }\n\n  let items: any = []\n  for (let item of data) {\n    if (ip != item[2]) {\n      continue\n    }\n    items.push(item)\n  }\n  renderQuerylogTable(items, false, false)\n}\n\nfunction accessTypeChange() {\n  //@ts-ignore\n  let at = document.getElementById('accessType').value\n  if (at == \"\") {\n    renderQuerylogTable(data, true, false)\n    return\n  }\n\n  let items: any = []\n  for (let item of data) {\n    if (at != item[1]) {\n      continue\n    }\n    items.push(item)\n  }\n  renderQuerylogTable(items, false, false)\n}\n\nfunction optChange(event: any) {\n  let opt = event.target.value\n  if (opt == \"\") {\n    return\n  }\n\n  let at: number = parseInt(opt)\n  //@ts-ignore\n  let ip: string = document.getElementById('filterIp').value\n  if (at == 2) {\n    //忽略就全部忽略\n    ip = \"\"\n  }\n  let domain = event.target.getAttribute('domain')\n  fetchPost('/api/access-control/update', {accessType: at, ip: ip, domain: domain}, 'no-cache', (rspData) => {\n    console.log(rspData)\n  })\n}\n\nfunction initDatesSelect() {\n  let ts = Date.now() - 3600*8*1000\n  let html = ''\n  for (let i=0;i<10;i++) {\n    let date = new Date(ts)\n    let str = `${date.getFullYear()}${(date.getMonth()+1).toString().padStart(2, '0')}${(date.getDate()).toString().padStart(2, '0')}`\n    html += `<option value=\"${str}\">${str}</option>`\n    ts -= 3600*24*1000\n  }\n  //@ts-ignore\n  document.getElementById('date').innerHTML = html\n}\n\nfunction queryLog() {\n  //@ts-ignore\n  let date = document.getElementById('date').value\n  if (date == \"\") {\n    return\n  }\n\n  //@ts-ignore\n  document.getElementById('querylog').innerHTML = ''\n  fetchPost('/api/querylog/get', {date: date, ip: \"\", bufSize: 1024*1024}, 'no-cache', (rspData) => {\n    data = rspData\n    renderQuerylogTable(rspData, true, true)\n  })\n}\n\nfunction initIndex(query: any) {\n  initDatesSelect()\n  queryLog()\n\n  //@ts-ignore\n  document.getElementById('date').addEventListener('change', queryLog)\n  //@ts-ignore\n  document.getElementById('filterIp').addEventListener('change', filterIpChange)\n  //@ts-ignore\n  document.getElementById('accessType').addEventListener('change', accessTypeChange)\n}\n\nfunction renderDenyTable(data: any) {\n  let html = ''\n  for (let item of data) {\n    let ip = item[0]\n    if (ipNameMap[ip]) {\n      ip += `(${ipNameMap[ip]})`\n    }\n    html += `<tr>\n    <td>${ip}</td>\n    <td>${item[1]}</td>\n    </tr>`\n  }\n\n  //@ts-ignore\n  document.getElementById('denyTable').innerHTML = html\n}\n\n\nfunction renderControlTable(data: any) {\n  data.sort((a:any,b:any)=> b[2] - a[2])\n  let html = ''\n  for (let item of data) {\n    let control = item[2]\n    switch (control) {\n      case '0':\n        control = '忽略'\n        break\n      case '1':\n        control = '正常'\n        break\n      case '2':\n        control = '拦截'\n        break\n      default:\n        break\n    }\n    let ip = item[0]\n    if (ipNameMap[ip]) {\n      ip += `(${ipNameMap[ip]})`\n    }\n    html += `<tr>\n    <td>${ip}</td>\n    <td>${item[1]}</td>\n    <td>${control}</td>\n    </tr>`\n  }\n\n  //@ts-ignore\n  document.getElementById('controlTable').innerHTML = html\n}\n\nfunction denySubmit(event: any) {\n  //@ts-ignore\n  let ip: string = document.getElementById('ip').value.trim()\n  //@ts-ignore\n  let at: number = parseInt(document.getElementById('deny').value)\n  let deny = at == 1? true: false\n  \n  fetchPost('/api/access-deny/update', {deny: deny, ip: ip}, 'no-cache', (rspData) => {\n    console.log(rspData)\n  })\n}\n\nfunction controlSubmit(event: any) {\n  //@ts-ignore\n  let ip: string = document.getElementById('ip').value.trim()\n  //@ts-ignore\n  let domain: string = document.getElementById('domain').value.trim()\n  //@ts-ignore\n  let at: number = parseInt(document.getElementById('at').value)\n  if (at == 2) {\n    //忽略就全部忽略\n    ip = \"\"\n  }\n  \n  fetchPost('/api/access-control/update', {accessType: at, ip: ip, domain: domain}, 'no-cache', (rspData) => {\n    console.log(rspData)\n  })\n}\n\nfunction initControl(query: any) {\n  //@ts-ignore\n  document.getElementById('denyTable').innerHTML = ''\n  fetchPost('/api/access-deny/get', {}, 'no-cache', (rspData) => {\n    renderDenyTable(rspData)\n  })\n\n  //@ts-ignore\n  document.getElementById('controlTable').innerHTML = ''\n  fetchPost('/api/access-control/get', {}, 'no-cache', (rspData) => {\n    renderControlTable(rspData)\n  })\n\n  //@ts-ignore\n  document.getElementById('denySubmit').addEventListener('click', denySubmit)\n  \n  //@ts-ignore\n  document.getElementById('controlSubmit').addEventListener('click', controlSubmit)\n}\n\nexport function init() {\n  if (window.location.href.startsWith('file:')) {\n    server = 'http://127.0.0.1:8123'\n  }\n\n  let pathname = window.location.pathname\n  let arr = pathname.split('/')\n  pathname = arr[arr.length-1]\n  let query = parseQuery(window.location.search)\n  switch (pathname) {\n    case '':\n    case 'index.html':\n      initIndex(query)\n      break\n    case 'control.html':\n      initControl(query)\n      break\n    default:\n      console.log('wrong pathname', pathname, window.location.pathname)\n      break\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  init()\n})"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}